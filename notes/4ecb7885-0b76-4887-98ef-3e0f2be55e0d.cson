createdAt: "2019-02-11T13:00:34.325Z"
updatedAt: "2019-02-11T14:40:25.945Z"
type: "MARKDOWN_NOTE"
folder: "519177323b9b1554eb7a"
title: "JAVA语言基础"
tags: []
content: '''
  # JAVA语言基础
  [github地址](https://github.com/binggouxsm/JAVA-Reference)
  
  ### 目录：
  
  <!-- toc -->
  
    * [1. 面向对象编程](#1)
      + [1.1 基本思想](#11)
      + [1.2 三大特性：封装、继承、多态 <sup>\\[1\\]</sup>](#12-sup1sup)
        - [1.2.1 封装](#121)
        - [1.2.2 继承](#122)
      + [1.3 与面向过程的比较](#13)
    * [2. 对象的初始化和清理](#2)
    * [3.  static](#3-static)
  - [参考资料](#)
  
  <!-- tocstop -->
  
  
  
  ### 1. 面向对象编程
  
  #### 1.1 基本思想
  
  将所有的事物抽象成类（Class），每个类包含对应的属性(attribute)和方法(method)。基于类去实例化具体对象(Object)，程序是对象之间的相互调用。
  
  #### 1.2 三大特性：封装、继承、多态 <sup>\\[1\\]</sup>
  
  ##### 1.2.1 封装
  
  封装是将类的部分属性和方法隐藏起来，对调用方只暴露必要的属性和方法。
  
  为什么要封装？
  (1)  访问控制的需要，将私有的属性和私有的方法隐藏起来，避免调用方影响内部的逻辑 
  (2) 当内部的逻辑发生变化时，外部调用不用因此而修改，他们只调用开放的接口，而不用去关心内部的实现
  
  如何实现封装？
  关键字 | 类内部 | 同一个包内 | 子类 | 其他 
  --- | --- | --- | --- | ---
  public | 允许 | 允许 |  允许 | 允许 |
  protected |  允许 | 允许 | 允许 | 不允许 |
  default |  允许 | 允许 | 不允许 | 不允许 |
  private |  允许 | 不允许 | 不允许 | 不允许 |
  
  ##### 1.2.2 继承
  
  
  #### 1.3 与面向过程的比较
  
  ### 2. 对象的初始化和清理
  
  ### 3.  static 
  
  ## 参考资料
  1. [Java三大特性封装继承多态总结](https://blog.csdn.net/zjkC050818/article/details/78278658)
'''
linesHighlighted: []
isStarred: false
isTrashed: false
